{"ast":null,"code":"import * as React from 'react';\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\nimport { LicenseInfo } from '../utils/licenseInfo';\nimport { showExpiredLicenseError, showInvalidLicenseError, showNotFoundLicenseError } from '../utils/licenseErrorMessageUtils';\nimport { LicenseStatus } from '../utils/licenseStatus';\nvar sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  return React.useMemo(function () {\n    var _sharedLicenseStatuse;\n\n    var licenseKey = LicenseInfo.getLicenseKey();\n\n    if (licenseKey && ((_sharedLicenseStatuse = sharedLicenseStatuses[packageName]) == null ? void 0 : _sharedLicenseStatuse.key) === licenseKey) {\n      return sharedLicenseStatuses[packageName].status;\n    }\n\n    var licenseStatus = verifyLicense(releaseInfo, licenseKey);\n    sharedLicenseStatuses[packageName] = {\n      key: licenseStatus,\n      status: licenseStatus\n    };\n\n    if (licenseStatus === LicenseStatus.Invalid) {\n      showInvalidLicenseError();\n    } else if (licenseStatus === LicenseStatus.NotFound) {\n      showNotFoundLicenseError();\n    } else if (licenseStatus === LicenseStatus.Expired) {\n      showExpiredLicenseError();\n    }\n\n    return licenseStatus;\n  }, [packageName, releaseInfo]);\n}","map":null,"metadata":{},"sourceType":"module"}