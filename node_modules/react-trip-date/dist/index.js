'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var styled = _interopDefault(require('styled-components'));
var classNames = _interopDefault(require('classnames'));

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var dayjs_min = createCommonjsModule(function (module, exports) {
!function(t,n){module.exports=n();}(commonjsGlobal,function(){var t="millisecond",n="second",e="minute",r="hour",i="day",s="week",u="month",a="quarter",o="year",h=/^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,f=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return !r||r.length>=n?t:""+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return (n<=0?"+":"-")+c(r,2,"0")+":"+c(i,2,"0")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return {M:u,y:o,w:s,d:i,h:r,m:e,s:n,ms:t,Q:a}[h]||String(h||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},$={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},l="en",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return l;if("string"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i;}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?"string"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t);}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if("string"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init();},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds();},d.$utils=function(){return D},d.isValid=function(){return !("Invalid Date"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,"$y",o)},d.month=function(t){return this.$g(t,"$M",u)},d.day=function(t){return this.$g(t,"$W",i)},d.date=function(t){return this.$g(t,"$D","date")},d.hour=function(t){return this.$g(t,"$H",r)},d.minute=function(t){return this.$g(t,"$m",e)},d.second=function(t){return this.$g(t,"$s",n)},d.millisecond=function(n){return this.$g(n,"$ms",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,a){var h=this,f=!!D.u(a)||a,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M="set"+(this.$u?"UTC":"");switch(c){case o:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case"date":return $(M+"Hours",0);case r:return $(M+"Minutes",1);case e:return $(M+"Seconds",2);case n:return $(M+"Milliseconds",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,a){var h,f=D.p(s),c="set"+(this.$u?"UTC":""),d=(h={},h[i]=c+"Date",h.date=c+"Date",h[u]=c+"Month",h[o]=c+"FullYear",h[r]=c+"Hours",h[e]=c+"Minutes",h[n]=c+"Seconds",h[t]=c+"Milliseconds",h)[f],$=f===i?this.$D+(a-this.$W):a;if(f===u||f===o){var l=this.clone().set("date",1);l.$d[d]($),l.init(),this.$d=l.set("date",Math.min(this.$D,l.daysInMonth())).toDate();}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,a){var h,f=this;t=Number(t);var c=D.p(a),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return "Invalid Date";var e=t||"YYYY-MM-DDTHH:mm:ssZ",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,"0")},$=i.meridiem||function(t,n,e){var r=t<12?"AM":"PM";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:D.s(a+1,2,"0"),MMM:c(i.monthsShort,a,h,3),MMMM:h[a]||h(this,e),D:this.$D,DD:D.s(this.$D,2,"0"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,o,2),ddd:c(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:D.s(s,2,"0"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,"0"),s:String(this.$s),ss:D.s(this.$s,2,"0"),SSS:D.s(this.$ms,3,"0"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(":","")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[o]=y/12,c[u]=y,c[a]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});
});

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

/* eslint-disable */

/*
 JavaScript functions for the Fourmilab Calendar Converter
 by John Walker  --  September, MIM
 http://www.fourmilab.ch/documents/calendar/
 This program is in the public domain.
 */

/*  MOD  --  Modulus function which works for non-integers.  */
var $floor = Math.floor;

function mod(a, b) {
  return a - b * $floor(a / b);
} //  LEAP_GREGORIAN  --  Is a given year in the Gregorian calendar a leap year ?


function lg(year) {
  return year % 4 == 0 && !(year % 100 == 0 && year % 400 != 0);
} //  GREGORIAN_TO_JD  --  Determine Julian day number from Gregorian calendar date
// GREGORIAN_EPOCH


var GE = 1721425.5;

function g2j(year, month, day) {
  return GE - 1 + 365 * (year - 1) + $floor((year - 1) / 4) + -$floor((year - 1) / 100) + $floor((year - 1) / 400) + $floor((367 * month - 362) / 12 + (month <= 2 ? 0 : lg(year) ? -1 : -2) + day);
} //  JD_TO_GREGORIAN  --  Calculate Gregorian calendar date from Julian day


function j2g(jd) {
  var wjd, depoch, quadricent, dqc, cent, dcent, quad, dquad, yindex, year, yearday, leapadj;
  wjd = $floor(jd - 0.5) + 0.5;
  depoch = wjd - GE;
  quadricent = $floor(depoch / 146097);
  dqc = mod(depoch, 146097);
  cent = $floor(dqc / 36524);
  dcent = mod(dqc, 36524);
  quad = $floor(dcent / 1461);
  dquad = mod(dcent, 1461);
  yindex = $floor(dquad / 365);
  year = quadricent * 400 + cent * 100 + quad * 4 + yindex;

  if (!(cent == 4 || yindex == 4)) {
    year++;
  }

  yearday = wjd - g2j(year, 1, 1);
  leapadj = wjd < g2j(year, 3, 1) ? 0 : lg(year) ? 1 : 2;
  var month = $floor(((yearday + leapadj) * 12 + 373) / 367),
      day = wjd - g2j(year, month, 1) + 1;
  return [year, month, day];
} // PERSIAN_EPOCH


var PE = 1948320.5; //  PERSIAN_TO_JD  --  Determine Julian day from Persian date

function p2j(year, month, day) {
  var epbase, epyear;
  epbase = year - (year >= 0 ? 474 : 473);
  epyear = 474 + mod(epbase, 2820);
  return day + (month <= 7 ? (month - 1) * 31 : (month - 1) * 30 + 6) + $floor((epyear * 682 - 110) / 2816) + (epyear - 1) * 365 + $floor(epbase / 2820) * 1029983 + (PE - 1);
} //  JD_TO_PERSIAN  --  Calculate Persian date from Julian day


function j2p(jd) {
  var year, month, day, depoch, cycle, cyear, ycycle, aux1, aux2, yday;
  jd = $floor(jd) + 0.5;
  depoch = jd - p2j(475, 1, 1);
  cycle = $floor(depoch / 1029983);
  cyear = mod(depoch, 1029983);

  if (cyear == 1029982) {
    ycycle = 2820;
  } else {
    aux1 = $floor(cyear / 366);
    aux2 = mod(cyear, 366);
    ycycle = $floor((2134 * aux1 + 2816 * aux2 + 2815) / 1028522) + aux1 + 1;
  }

  year = ycycle + 2820 * cycle + 474;

  if (year <= 0) {
    year--;
  }

  yday = jd - p2j(year, 1, 1) + 1;
  month = yday <= 186 ? Math.ceil(yday / 31) : Math.ceil((yday - 6) / 30);
  day = jd - p2j(year, month, 1) + 1;
  return [year, month, day];
}

var jdate = {
  J: function J(y, m, d) {
    return j2p(g2j(y, m, d));
  },
  G: function G(y, m, d) {
    return j2g(p2j(y, m, d));
  }
};

var REGEX_PARSE = /^(\d{4})[-/]?(\d{1,2})[-/]?(\d{0,2})(.*)?$/;
var REGEX_FORMAT = /\[.*?\]|jY{2,4}|jM{1,4}|jD{1,2}|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;
var DATE = 'date';
var D = 'day';
var M = 'month';
var Y = 'year';
var W = 'week';
var FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ';
var fa = {
  name: 'fa',
  weekdays: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'),
  months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
  jmonths: 'فروردین_اردیبهشت_خرداد_تیر_مرداد_شهریور_مهر_آبان_آذر_دی_بهمن_اسفند'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  relativeTime: {
    future: 'در %s ثانیه‌ی آتی',
    past: '%s پیش',
    s: 'چند ثانیه پیش',
    m: 'یک دقیقه',
    mm: '%d دقیقه',
    h: 'یک ساعت',
    hh: '%d ساعت',
    d: 'یک روز',
    dd: '%d روز',
    M: 'یک ماه',
    MM: '%d ماه',
    y: 'یک سال',
    yy: '%d سال'
  }
};

var plugin = (function (o, Dayjs, dayjs) {
  var proto = Dayjs.prototype;
  var U = proto.$utils();

  var $isJalali = function $isJalali(v) {
    return v.$C === 'jalali';
  };

  var $prettyUnit = U.prettyUnit || U.p;
  var $isUndefined = U.isUndefined || U.u;
  var $padStart = U.padStart || U.s;
  var $monthDiff = U.monthDiff || U.m;
  var $absFloor = U.absFloor || U.a;

  var wrapperOfTruth = function wrapperOfTruth(action) {
    return function () {
      var unsure = action.bind(this).apply(void 0, arguments);
      unsure.$C = this.$C;

      if (unsure.isJalali()) {
        unsure.InitJalali();
      }

      return unsure;
    };
  }; // keep calendar on date manipulation


  proto.startOf = wrapperOfTruth(proto.startOf);
  proto.endOf = wrapperOfTruth(proto.endOf);
  proto.add = wrapperOfTruth(proto.add);
  proto.subtract = wrapperOfTruth(proto.subtract);
  proto.set = wrapperOfTruth(proto.set);
  var oldParse = proto.parse;
  var oldInit = proto.init;
  var oldStartOf = proto.startOf;
  var old$Set = proto.$set;
  var oldAdd = proto.add;
  var oldFormat = proto.format;
  var oldDiff = proto.diff;
  var oldYear = proto.year;
  var oldMonth = proto.month;
  var oldDate = proto.date;
  var oldDaysInMonth = proto.daysInMonth;
  var oldToArray = proto.toArray;
  dayjs.$C = 'gregory'; // First Day Of Week

  dayjs.$fdow = 6; // 0: sunday, ...

  dayjs.calendar = function (calendar) {
    dayjs.$C = calendar;
    return dayjs;
  };

  proto.calendar = function (calendar) {
    var that = this.clone();
    that.$C = calendar;

    if (that.isJalali()) {
      that.InitJalali();
    }

    return that;
  };

  proto.isJalali = function () {
    return $isJalali(this);
  };

  dayjs.en.jmonths = 'Farvardin_Ordibehesht_Khordaad_Tir_Mordaad_Shahrivar_Mehr_Aabaan_Aazar_Dey_Bahman_Esfand'.split('_');
  dayjs.locale('fa', fa, true);

  var wrapper = function wrapper(date, instance) {
    return dayjs(date, {
      locale: instance.$L,
      calendar: instance.$C
    });
  };

  proto.init = function () {
    var cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    oldInit.bind(this)(cfg);

    if (this.isJalali()) {
      this.InitJalali();
    }
  };

  proto.parse = function (cfg) {
    var reg;
    this.$C = cfg.calendar || this.$C || dayjs.$C; // eslint-disable-next-line no-cond-assign

    if (cfg.jalali && typeof cfg.date === 'string' && /.*[^Z]$/i.test(cfg.date) // looking for a better way
    && (reg = cfg.date.match(REGEX_PARSE))) {
      // 1397-08-08 or 13970808
      var _jdate$G = jdate.G(parseInt(reg[1], 10), parseInt(reg[2], 10), parseInt(reg[3] || 1, 10)),
          _jdate$G2 = _slicedToArray(_jdate$G, 3),
          y = _jdate$G2[0],
          m = _jdate$G2[1],
          d = _jdate$G2[2];

      cfg.date = "".concat(y, "-").concat(m, "-").concat(d).concat(reg[4] || '');
    }

    return oldParse.bind(this)(cfg);
  };

  proto.InitJalali = function () {
    var _jdate$J = jdate.J(this.$y, this.$M + 1, this.$D),
        _jdate$J2 = _slicedToArray(_jdate$J, 3),
        jy = _jdate$J2[0],
        jm = _jdate$J2[1],
        jd = _jdate$J2[2];

    this.$jy = jy;
    this.$jM = jm - 1;
    this.$jD = jd;
  };

  proto.startOf = function (units, startOf) {
    var _this = this;

    // startOf -> endOf
    if (!$isJalali(this)) {
      return oldStartOf.bind(this)(units, startOf);
    }

    var isStartOf = !$isUndefined(startOf) ? startOf : true;
    var unit = $prettyUnit(units);

    var instanceFactory = function instanceFactory(d, m) {
      var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.$jy;

      var _jdate$G3 = jdate.G(y, m + 1, d),
          _jdate$G4 = _slicedToArray(_jdate$G3, 3),
          gy = _jdate$G4[0],
          gm = _jdate$G4[1],
          gd = _jdate$G4[2];

      var ins = wrapper(new Date(gy, gm - 1, gd), _this);
      return isStartOf ? ins : ins.endOf(D);
    };

    var WModifier = (this.$W + (7 - dayjs.$fdow)) % 7;

    switch (unit) {
      case Y:
        return isStartOf ? instanceFactory(1, 0) : instanceFactory(0, 0, this.$jy + 1);

      case M:
        return isStartOf ? instanceFactory(1, this.$jM) : instanceFactory(0, (this.$jM + 1) % 12, this.$jy + parseInt((this.$jM + 1) / 12, 10));

      case W:
        return isStartOf ? instanceFactory(this.$jD - WModifier, this.$jM) : instanceFactory(this.$jD + (6 - WModifier), this.$jM);

      default:
        return oldStartOf.bind(this)(units, startOf);
    }
  };

  proto.$set = function (units, _int) {
    var _this2 = this;

    if (!$isJalali(this)) {
      return old$Set.bind(this)(units, _int);
    }

    var unit = $prettyUnit(units);

    var instanceFactory = function instanceFactory(d, m) {
      var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this2.$jy;

      var _jdate$G5 = jdate.G(y, m + 1, d),
          _jdate$G6 = _slicedToArray(_jdate$G5, 3),
          gy = _jdate$G6[0],
          gm = _jdate$G6[1],
          gd = _jdate$G6[2];

      _this2.$d.setDate(gd);

      _this2.$d.setMonth(gm - 1);

      _this2.$d.setFullYear(gy);

      return _this2;
    };

    switch (unit) {
      case DATE:
      case D:
        instanceFactory(_int, this.$jM);
        break;

      case M:
        instanceFactory(this.$jD, _int);
        break;

      case Y:
        instanceFactory(this.$jD, this.$jM, _int);
        break;

      default:
        return old$Set.bind(this)(units, _int);
    }

    this.init();
    return this;
  };

  proto.add = function (number, units) {
    var _this3 = this;

    if (!$isJalali(this)) {
      return oldAdd.bind(this)(number, units);
    }

    number = Number(number); // eslint-disable-line no-param-reassign
    // units === 'ms' hard code here, will update in next release

    var unit = units && (units.length === 1 || units === 'ms') ? units : $prettyUnit(units);

    var instanceFactory = function instanceFactory(u, n) {
      var date = _this3.set(DATE, 1).set(u, n + number);

      return date.set(DATE, Math.min(_this3.$jD, date.daysInMonth()));
    };

    if (['M', M].indexOf(unit) > -1) {
      var n = this.$jM + number;
      var y = n < 0 ? -Math.ceil(-n / 12) : parseInt(n / 12, 10);
      var d = this.$jD;
      var x = this.set(D, 1).add(y, Y).set(M, n - y * 12);
      return x.set(D, Math.min(x.daysInMonth(), d));
    }

    if (['y', Y].indexOf(unit) > -1) {
      return instanceFactory(Y, this.$jy);
    }

    if (['d', D].indexOf(unit) > -1) {
      var date = new Date(this.$d);
      date.setDate(date.getDate() + number);
      return wrapper(date, this);
    }

    return oldAdd.bind(this)(number, units);
  };

  proto.format = function (formatStr, localeObject) {
    var _this4 = this;

    if (!$isJalali(this)) {
      return oldFormat.bind(this)(formatStr, localeObject);
    }

    var str = formatStr || FORMAT_DEFAULT;
    var locale = localeObject || this.$locale();
    var jmonths = locale.jmonths;
    return str.replace(REGEX_FORMAT, function (match) {
      if (match.indexOf('[') > -1) return match.replace(/\[|\]/g, '');

      switch (match) {
        case 'YY':
          return String(_this4.$jy).slice(-2);

        case 'YYYY':
          return String(_this4.$jy);

        case 'M':
          return String(_this4.$jM + 1);

        case 'MM':
          return $padStart(_this4.$jM + 1, 2, '0');

        case 'MMM':
          return jmonths[_this4.$jM].slice(0, 3);

        case 'MMMM':
          return jmonths[_this4.$jM];

        case 'D':
          return String(_this4.$jD);

        case 'DD':
          return $padStart(_this4.$jD, 2, '0');

        default:
          return oldFormat.bind(_this4)(match, localeObject);
      }
    });
  };

  proto.diff = function (input, units, _float) {
    if (!$isJalali(this)) {
      return oldDiff.bind(this)(input, units, _float);
    }

    var unit = $prettyUnit(units);
    var that = dayjs(input);
    var result = $monthDiff(this, that);

    switch (unit) {
      case Y:
        result /= 12;
        break;

      case M:
        break;

      default:
        // milliseconds
        return oldDiff.bind(this)(input, units, _float);
    }

    return _float ? result : $absFloor(result);
  };

  proto.$g = function (input, get, set) {
    if ($isUndefined(input)) return this[get];
    return this.set(set, input);
  };

  proto.year = function (input) {
    if (!$isJalali(this)) {
      return oldYear.bind(this)(input);
    }

    return this.$g(input, '$jy', Y);
  };

  proto.month = function (input) {
    if (!$isJalali(this)) {
      return oldMonth.bind(this)(input);
    }

    return this.$g(input, '$jM', M);
  };

  proto.date = function (input) {
    if (!$isJalali(this)) {
      return oldDate.bind(this)(input);
    }

    return this.$g(input, '$jD', D);
  };

  proto.daysInMonth = function () {
    if (!$isJalali(this)) {
      return oldDaysInMonth.bind(this)();
    }

    return this.endOf(M).$jD;
  };
  /**
   * toArray function moved to official plugin
   * Check function existence before override
   */


  if (oldToArray) {
    proto.toArray = function () {
      if (!$isJalali(this)) {
        return oldToArray.bind(this)();
      }

      return [this.$jy, this.$jM, this.$jD, this.$H, this.$m, this.$s, this.$ms];
    };
  }

  proto.clone = function () {
    return wrapper(this.toDate(), this);
  };
});

var isBetween = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t,i){t.prototype.isBetween=function(e,t,s,f){var n=i(e),o=i(t),r="("===(f=f||"()")[0],u=")"===f[1];return (r?this.isAfter(n,s):!this.isBefore(n,s))&&(u?this.isBefore(o,s):!this.isAfter(o,s))||(r?this.isBefore(n,s):!this.isAfter(n,s))&&(u?this.isAfter(o,s):!this.isBefore(o,s))};}});
});

var isSameOrBefore = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t){t.prototype.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)};}});
});

dayjs_min.extend(plugin);
dayjs_min.extend(isBetween);
dayjs_min.extend(isSameOrBefore);
var dayjsLocalized = function (jalali, date) {
    if (date) {
        return dayjs_min(date)
            .calendar(jalali ? 'jalali' : 'gregory')
            .locale(jalali ? 'fa' : 'en');
    }
    return dayjs_min()
        .calendar(jalali ? 'jalali' : 'gregory')
        .locale(jalali ? 'fa' : 'en');
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var DayStyle = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  width: 40px;\n  height: 40px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.1s ease-in-out;\n  margin-bottom: 5px;\n  flex-direction: column;\n  cursor: pointer;\n\n  p {\n    margin: 0;\n  }\n\n  .price {\n    font-size: 0.42rem;\n  }\n\n  .date {\n    font-size: ", ";\n  }\n\n  &.inactive {\n    color: transparent;\n    visibility: hidden;\n  }\n\n  &.disabled {\n    color: ", ";\n    position: relative;\n\n    &:hover {\n      cursor: not-allowed;\n    }\n\n    &::after {\n      position: absolute;\n      content: '';\n      width: 15px;\n      height: 2px;\n      background-color: ", ";\n      transform: rotate(-20deg);\n    }\n  }\n\n  &.range-select {\n    background-color: ", ";\n    color: #fff;\n\n    filter: drop-shadow(4px 0px 2px rgba(0, 0, 0, 0.1))\n      drop-shadow(4px 0px 2px rgba(0, 0, 0, 0.1));\n\n    &.jalali {\n      filter: drop-shadow(-4px 0px 2px rgba(0, 0, 0, 0.1))\n        drop-shadow(-4px 0px 2px rgba(0, 0, 0, 0.1));\n    }\n\n    &.end-date {\n      border-top-right-radius: 25px;\n      border-bottom-right-radius: 25px;\n\n      &.jalali {\n        border-top-left-radius: 25px;\n        border-bottom-left-radius: 25px;\n        border-top-right-radius: 0px;\n        border-bottom-right-radius: 0px;\n      }\n    }\n\n    &.start-date {\n      border-top-left-radius: 25px;\n      border-bottom-left-radius: 25px;\n\n      &.jalali {\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n        border-top-right-radius: 25px;\n        border-bottom-right-radius: 25px;\n      }\n    }\n  }\n\n  &.select-mode {\n    border-radius: 50%;\n    margin-left: 5px;\n    margin-bottom: 5px;\n    width: 38px;\n    height: 38px;\n    transition: all 0.3s ease-in-out;\n\n    &:hover {\n      background-color: ", ";\n    }\n  }\n\n  &.selected {\n    color: #fff;\n    background-color: ", ";\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      background-color: ", ";\n    }\n\n    p {\n      color: #fff;\n    }\n\n    &::after {\n      display: none;\n    }\n  }\n  &.same {\n    border-top-left-radius: 25px !important;\n    border-bottom-left-radius: 25px !important;\n    border-top-right-radius: 25px !important;\n    border-bottom-right-radius: 25px !important;\n  }\n"], ["\n  width: 40px;\n  height: 40px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.1s ease-in-out;\n  margin-bottom: 5px;\n  flex-direction: column;\n  cursor: pointer;\n\n  p {\n    margin: 0;\n  }\n\n  .price {\n    font-size: 0.42rem;\n  }\n\n  .date {\n    font-size: ", ";\n  }\n\n  &.inactive {\n    color: transparent;\n    visibility: hidden;\n  }\n\n  &.disabled {\n    color: ", ";\n    position: relative;\n\n    &:hover {\n      cursor: not-allowed;\n    }\n\n    &::after {\n      position: absolute;\n      content: '';\n      width: 15px;\n      height: 2px;\n      background-color: ", ";\n      transform: rotate(-20deg);\n    }\n  }\n\n  &.range-select {\n    background-color: ", ";\n    color: #fff;\n\n    filter: drop-shadow(4px 0px 2px rgba(0, 0, 0, 0.1))\n      drop-shadow(4px 0px 2px rgba(0, 0, 0, 0.1));\n\n    &.jalali {\n      filter: drop-shadow(-4px 0px 2px rgba(0, 0, 0, 0.1))\n        drop-shadow(-4px 0px 2px rgba(0, 0, 0, 0.1));\n    }\n\n    &.end-date {\n      border-top-right-radius: 25px;\n      border-bottom-right-radius: 25px;\n\n      &.jalali {\n        border-top-left-radius: 25px;\n        border-bottom-left-radius: 25px;\n        border-top-right-radius: 0px;\n        border-bottom-right-radius: 0px;\n      }\n    }\n\n    &.start-date {\n      border-top-left-radius: 25px;\n      border-bottom-left-radius: 25px;\n\n      &.jalali {\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n        border-top-right-radius: 25px;\n        border-bottom-right-radius: 25px;\n      }\n    }\n  }\n\n  &.select-mode {\n    border-radius: 50%;\n    margin-left: 5px;\n    margin-bottom: 5px;\n    width: 38px;\n    height: 38px;\n    transition: all 0.3s ease-in-out;\n\n    &:hover {\n      background-color: ", ";\n    }\n  }\n\n  &.selected {\n    color: #fff;\n    background-color: ", ";\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      background-color: ", ";\n    }\n\n    p {\n      color: #fff;\n    }\n\n    &::after {\n      display: none;\n    }\n  }\n  &.same {\n    border-top-left-radius: 25px !important;\n    border-bottom-left-radius: 25px !important;\n    border-top-right-radius: 25px !important;\n    border-bottom-right-radius: 25px !important;\n  }\n"])), function (props) { return props.theme.fs11; }, function (props) { return props.theme.disabledText; }, function (props) { return props.theme.disabledText; }, function (props) { return props.theme.primary; }, function (props) { return props.theme.underlineColor; }, function (props) { return props.theme.primary; }, function (props) { return props.theme.primary; });
var HeaderStyle = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: ", ";\n  justify-content: space-between;\n  align-items: center;\n  height: 55px;\n  background-color: ", ";\n  position: relative;\n\n  p {\n    direction: ", ";\n    font-size: ", ";\n    color: #fff;\n    width: ", ";\n    text-align: center;\n    cursor: pointer;\n  }\n  .action {\n    height: 55px;\n    width: 55px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transform: ", ";\n  }\n\n  path {\n    fill: #fff;\n  }\n"], ["\n  display: flex;\n  flex-direction: ", ";\n  justify-content: space-between;\n  align-items: center;\n  height: 55px;\n  background-color: ", ";\n  position: relative;\n\n  p {\n    direction: ", ";\n    font-size: ", ";\n    color: #fff;\n    width: ", ";\n    text-align: center;\n    cursor: pointer;\n  }\n  .action {\n    height: 55px;\n    width: 55px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transform: ", ";\n  }\n\n  path {\n    fill: #fff;\n  }\n"])), function (props) { return (props.jalali ? 'row-reverse' : 'row'); }, function (props) { return props.theme.primary; }, function (props) { return (props.jalali ? 'ltr' : 'rtl'); }, function (props) { return props.theme.fs13; }, function (props) { return 100 / props.numberOfMonths + "%"; }, function (props) { return (props.jalali ? 'rotate(0deg)' : 'rotate(180deg)'); });
var TitleDaysOfWeekStyle = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  flex-direction: ", ";\n  border-bottom: 1px solid #e2e2e2;\n  margin: 30px 0 15px 0;\n\n  p {\n    width: 40px;\n    margin-bottom: 15px;\n  }\n"], ["\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  flex-direction: ", ";\n  border-bottom: 1px solid #e2e2e2;\n  margin: 30px 0 15px 0;\n\n  p {\n    width: 40px;\n    margin-bottom: 15px;\n  }\n"])), function (props) { return (props.jalali ? 'row-reverse' : 'row'); });
var MonthsStyle = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: ", ";\n  justify-content: center;\n  margin: 0 15px;\n  .month {\n    width: ", ";\n    margin: 0 15px;\n  }\n\n  .week {\n    display: flex;\n    flex-direction: ", ";\n    justify-content: center;\n  }\n"], ["\n  display: flex;\n  flex-direction: ", ";\n  justify-content: center;\n  margin: 0 15px;\n  .month {\n    width: ", ";\n    margin: 0 15px;\n  }\n\n  .week {\n    display: flex;\n    flex-direction: ", ";\n    justify-content: center;\n  }\n"])), function (props) { return (props.jalali ? 'row-reverse' : 'row'); }, function (props) { return 100 / props.numberOfMonths + "%"; }, function (props) { return (props.jalali ? 'row-reverse' : 'row'); });
var DisplayMonthStyle = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  margin-top: 15px;\n  display: flex;\n  flex: 1 1;\n  height: 350px;\n  flex-wrap: wrap;\n  flex-direction: ", ";\n\n  .month {\n    flex-basis: calc(25% - 4px);\n    justify-content: center;\n    text-align: center;\n    display: flex;\n    background-color: ", ";\n    align-items: center;\n    cursor: pointer;\n    border: 2px solid #fff;\n\n    p {\n      color: #fff;\n    }\n  }\n"], ["\n  margin-top: 15px;\n  display: flex;\n  flex: 1 1;\n  height: 350px;\n  flex-wrap: wrap;\n  flex-direction: ", ";\n\n  .month {\n    flex-basis: calc(25% - 4px);\n    justify-content: center;\n    text-align: center;\n    display: flex;\n    background-color: ", ";\n    align-items: center;\n    cursor: pointer;\n    border: 2px solid #fff;\n\n    p {\n      color: #fff;\n    }\n  }\n"])), function (props) { return (props.jalali ? 'row-reverse' : 'row'); }, function (props) { return props.theme.primary; });
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var ChevronRight = (({
  styles = {},
  ...props
}) => React__default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  width: "4.877",
  height: "7.91"
}, props), React__default.createElement("path", {
  d: "M-.001 6.986L3.03 3.955-.001.924.922.001l3.954 3.954L.922 7.909z",
  fill: "#757575"
})));

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }
var ChevronLeft = (({
  styles = {},
  ...props
}) => React__default.createElement("svg", _extends$1({
  xmlns: "http://www.w3.org/2000/svg",
  width: "4.876",
  height: "7.908"
}, props), React__default.createElement("path", {
  d: "M4.877.924L1.846 3.955l3.031 3.031-.923.923L0 3.955 3.954.001z",
  fill: "#757575"
})));

var Context = React.createContext(null);

var Header = function () {
    var _a = React.useContext(Context), source = _a.source, setSource = _a.setSource, displayMonths = _a.displayMonths, jalali = _a.jalali, numberOfMonths = _a.numberOfMonths, setDisplayMonths = _a.setDisplayMonths;
    var nextMonth = function () {
        if (displayMonths) {
            setSource(source.add(1, 'year'));
        }
        else {
            setSource(source.add(1, 'month'));
        }
    };
    var prevMonth = function () {
        if (displayMonths) {
            setSource(source.subtract(1, 'year'));
        }
        else {
            setSource(source.subtract(1, 'month'));
        }
    };
    React.useEffect(function () { }, [displayMonths]);
    var titleMonth = function () {
        var titles = [];
        for (var i = 0; i < numberOfMonths; i++) {
            if (source.get('day') === 0) {
                source = source.add(1, 'day');
            }
            titles.push(React.createElement("p", { key: Math.random(), onClick: function () { return setDisplayMonths(true); } }, source.add(i, 'month').format('YYYY-MMMM')));
        }
        return titles;
    };
    return (React.createElement(HeaderStyle, { numberOfMonths: numberOfMonths, jalali: jalali },
        React.createElement("div", { className: "action", onClick: prevMonth },
            React.createElement(ChevronRight, { className: 'prev-month' }),
            displayMonths ? React.createElement(ChevronRight, { className: 'prev-month' }) : null),
        titleMonth(),
        React.createElement("div", { className: "action", onClick: nextMonth },
            React.createElement(ChevronLeft, { className: 'next-month' }),
            displayMonths ? React.createElement(ChevronLeft, { className: 'next-month' }) : null)));
};

function createCalendar(_a) {
    var source = _a.source, daysInMonth = _a.daysInMonth, firstDay = _a.firstDay, startOfWeek = _a.startOfWeek;
    var days = [];
    var shift = firstDay === startOfWeek
        ? 0
        : firstDay + (startOfWeek === 0 ? 0 : 7 - startOfWeek);
    var tmpDay = source.startOf('month').subtract(shift, 'day');
    var totalDays = daysInMonth + shift;
    var remaining = totalDays % 7;
    for (var i = 0; i < totalDays + (remaining > 0 ? 7 - remaining : 0); i++) {
        days.push(tmpDay);
        tmpDay = tmpDay.add(1, 'day');
    }
    return days;
}
var slice = function (arr, len) {
    var i = 0;
    var tmp = [];
    while (i * len < arr.length) {
        tmp.push(arr.slice(i * len, ++i * len));
    }
    return tmp;
};
function Calendar(_a) {
    var source = _a.source, jalali = _a.jalali, _b = _a.startOfWeek, startOfWeek = _b === void 0 ? 0 : _b, children = _a.children;
    var daysInMonth = source.daysInMonth(), firstDay = source.startOf('month').day();
    if (source.get('day') === 0) {
        source = source.add(1, 'day');
    }
    var groupedDays = slice(createCalendar({
        source: source,
        daysInMonth: daysInMonth,
        firstDay: firstDay,
        startOfWeek: jalali ? 6 : startOfWeek,
    }), 7);
    return children(groupedDays);
}

var Box = styled.div(function (props) { return ({
    display: "flex",
    flexDirection: "" + (props.column ? "column" : "row") + (props.reverse ? "-reverse" : ""),
    justifyContent: props.justifyContent || undefined,
    alignItems: props.alignItems || undefined,
    order: props.order || undefined,
    flex: props.flex || undefined,
    flexWrap: props.flexWrap ? "wrap" : undefined
}); });

var TitleOfWeek = function (_a) {
    var jalali = _a.jalali;
    var titleDayFa = ['ش', 'ی', 'د', 'س', 'چ', 'پ', 'ج'];
    var titleDayEn = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
    var title = jalali ? titleDayFa : titleDayEn;
    return (React.createElement(TitleDaysOfWeekStyle, { jalali: jalali, className: "title-weeks" }, title.map(function (item, index) { return (React.createElement("p", { key: "title-days-of-weeks" + index }, item)); })));
};

var convertDatesToArray = function (selectedDate, toJalali) {
    return selectedDate.map(function (item) {
        return dayjs_min(item, { jalali: !toJalali })
            .calendar(toJalali ? 'jalali' : 'gregory')
            .format('YYYY-MM-DD');
    });
};

var Day = function (_a) {
    var day = _a.day, month = _a.month;
    var _b = React.useContext(Context), source = _b.source, handleChange = _b.handleChange, selectedDays = _b.selectedDays, disabledBeforToday = _b.disabledBeforToday, setSelectedDays = _b.setSelectedDays, jalali = _b.jalali, disabled = _b.disabled, disabledDays = _b.disabledDays, numberOfSelectableDays = _b.numberOfSelectableDays, DayComponent = _b.DayComponent;
    var handleClick = function (day) {
        var date = day.currentTarget.getAttribute('data-date');
        if (disabled)
            return false;
        if ((disabledBeforToday &&
            dayjs_min(date).isBefore(dayjs_min()
                .calendar(jalali ? 'jalali' : 'gregory')
                .format('YYYY-MM-DD'))) ||
            disabledDays.includes(dayjs_min(date, { jalali: jalali })
                .calendar(jalali ? 'gregory' : '')
                .format('YYYY-MM-DD'))) {
            var dates = selectedDays.filter(function (item) {
                return item !== date;
            });
            setSelectedDays(dates);
            handleChange(dates);
            return false;
        }
        if (numberOfSelectableDays) {
            if (numberOfSelectableDays === 1) {
                setSelectedDays([date]);
                return false;
            }
            if (selectedDays.length < numberOfSelectableDays &&
                numberOfSelectableDays > 0) {
                // user could selected just size of multipleDate
                if (selectedDays.includes(date)) {
                    var dates = selectedDays.filter(function (item) {
                        return item !== date;
                    });
                    setSelectedDays(dates);
                    if (jalali) {
                        handleChange(convertDatesToArray(dates, !jalali));
                    }
                    else {
                        handleChange(dates);
                    }
                }
                else {
                    setSelectedDays(__spreadArrays(selectedDays, [date]));
                    if (jalali) {
                        handleChange(convertDatesToArray(selectedDays.concat([date]), !jalali));
                    }
                    else {
                        handleChange(__spreadArrays(selectedDays, [date]));
                    }
                }
            }
            else {
                // otherwise user must remove extra date selected
                // (if selectedDate default more than multipleDate)
                if (selectedDays.includes(date)) {
                    var dates = selectedDays.filter(function (item) {
                        return item !== date;
                    });
                    setSelectedDays(dates);
                    if (jalali) {
                        handleChange(convertDatesToArray(dates, !jalali));
                    }
                    else {
                        handleChange(dates);
                    }
                }
            }
        }
        else {
            // if doesn't multipleDate user could choose a lot and remove
            if (selectedDays.includes(date)) {
                var dates = selectedDays.filter(function (item) {
                    return item !== date;
                });
                setSelectedDays(__spreadArrays(dates));
                if (jalali) {
                    handleChange(convertDatesToArray(dates, !jalali));
                }
                else {
                    handleChange(dates);
                }
            }
            else {
                setSelectedDays(selectedDays.concat([date]));
                if (jalali) {
                    handleChange(convertDatesToArray(selectedDays.concat([date]), !jalali));
                }
                else {
                    handleChange(selectedDays.concat([date]));
                }
            }
        }
        return false;
    };
    var handleSelectedDate = function (day) {
        var date = dayjs_min(day, { jalali: jalali }, 'YYYY-MM-DD')
            .calendar(jalali ? 'jalali' : 'gregory')
            .format('YYYY-MM-DD');
        return selectedDays.includes(date);
    };
    var handleDisabledDate = function (day) {
        var date = dayjs_min(day).format('YYYY-MM-DD');
        if (jalali) {
            date = dayjs_min(day, { jalali: jalali }, 'YYYY-MM-DD')
                .calendar('gregory')
                .format('YYYY-MM-DD');
        }
        return (disabledDays.includes(date) ||
            (disabledBeforToday && dayjs_min(date).isBefore(dayjs_min().format('YYYY-MM-DD'))));
    };
    return (React.createElement(DayStyle, { className: classNames({
            'select-mode': true,
            inactive: day.month() !== source.subtract(-month, 'month').month(),
            selected: handleSelectedDate(day),
            disabled: handleDisabledDate(day),
            today: dayjs_min()
                .calendar(jalali ? 'jalali' : 'gregory')
                .format('YYYY-MM-DD') === day.format('YYYY-MM-DD'),
        }), "data-date": day.format('YYYY-MM-DD'), onClick: function (day) { return handleClick(day); } }, DayComponent ? (React.createElement(DayComponent, { day: day })) : (React.createElement("p", { className: "date" }, day.format('DD')))));
};

var Month = function () {
    var _a = React.useContext(Context), source = _a.source, jalali = _a.jalali, numberOfMonths = _a.numberOfMonths, TitleComponent = _a.TitleComponent;
    var months = [];
    var _loop_1 = function (i) {
        if (source.get('day') === 0) {
            source = source.add(1, 'day');
        }
        months.push(React.createElement("div", { className: "month date-picker", key: i },
            TitleComponent ? (React.createElement(TitleComponent, { source: source })) : (React.createElement(TitleOfWeek, { jalali: jalali })),
            React.createElement(Calendar, { source: source.subtract(-i, 'month'), jalali: jalali }, function (calendar) { return (React.createElement(Box, { column: true }, calendar.map(function (week) { return (React.createElement(Box, { className: "week", key: Math.random() }, week.map(function (day) {
                return React.createElement(Day, { key: Math.random(), day: day, month: i });
            }))); }))); })));
    };
    for (var i = 0; i < numberOfMonths; i++) {
        _loop_1(i);
    }
    return (React.createElement(MonthsStyle, { numberOfMonths: numberOfMonths || 1, jalali: jalali }, months));
};

var DisplayMonth = function () {
    var _a = React.useContext(Context), source = _a.source, setSource = _a.setSource, setDisplayMonths = _a.setDisplayMonths, jalali = _a.jalali;
    var _b = React.useState([]), months = _b[0], setMonths = _b[1];
    React.useEffect(function () {
        var months = [];
        for (var i = 0; i < 12; i++) {
            months[i] = source.month(i);
        }
        setMonths(months);
    }, [jalali, source]);
    var updateMonth = function (source) {
        if (source.get('day') === 0) {
            source = source.add(1, 'day');
        }
        setSource(source.month(+source.subtract(1, 'month').format('M')));
        setDisplayMonths(false);
    };
    return (React.createElement(DisplayMonthStyle, { jalali: jalali, className: "months" }, months.map(function (item) {
        return (React.createElement("div", { className: "month", key: item.format('MMMM'), onClick: function () { return updateMonth(item); } },
            React.createElement("p", null, item.format('MMMM'))));
    })));
};

var DatePicker = function (_a) {
    var _b = _a.jalali, jalali = _b === void 0 ? false : _b, _c = _a.numberOfMonths, numberOfMonths = _c === void 0 ? 1 : _c, handleChange = _a.handleChange, _d = _a.selectedDays, selectedDays = _d === void 0 ? [] : _d, _e = _a.numberOfSelectableDays, numberOfSelectableDays = _e === void 0 ? 0 : _e, _f = _a.disabledDays, disabledDays = _f === void 0 ? [] : _f, _g = _a.responsive, responsive = _g === void 0 ? undefined : _g, _h = _a.disabled, disabled = _h === void 0 ? false : _h, _j = _a.disabledBeforToday, disabledBeforToday = _j === void 0 ? true : _j, dayComponent = _a.dayComponent, titleComponent = _a.titleComponent;
    var _k = React.useState(selectedDays), cloneselectedDays = _k[0], setSelectedDays = _k[1];
    var _l = React.useState(numberOfMonths), numberOfMonth = _l[0], setNumberOfMonth = _l[1];
    var _m = React.useState(false), displayMonths = _m[0], setDisplayMonths = _m[1];
    var _o = React.useState(dayjsLocalized(jalali)), source = _o[0], setSource = _o[1];
    React.useEffect(function () {
        if (selectedDays.length > 0) {
            var firstDate = selectedDays.sort(function (prev, next) {
                return dayjs_min(prev).isSameOrBefore(next) ? -1 : 1;
            })[0];
            var diffDay = 0;
            diffDay = dayjs_min(firstDate).diff(dayjs_min().format('YYYY-MM-DD'), 'day');
            setSource(dayjs_min()
                .add(diffDay, 'day')
                .calendar(jalali ? 'jalali' : 'gregory')
                .locale(jalali ? 'fa' : 'en'));
        }
        else {
            setSource(dayjsLocalized(jalali));
        }
    }, [jalali]);
    React.useEffect(function () {
        if (selectedDays) {
            if (jalali) {
                setSelectedDays(convertDatesToArray(selectedDays, jalali));
            }
            else {
                setSelectedDays(selectedDays);
            }
        }
    }, []);
    React.useEffect(function () {
        var handleResize = function () {
            responsive(setNumberOfMonth);
        };
        if (responsive) {
            responsive(setNumberOfMonth);
            if (typeof window !== 'undefined') {
                //handle ssr
                window.addEventListener('resize', handleResize);
            }
        }
        else {
            setNumberOfMonth(numberOfMonths);
        }
        return function () {
            if (typeof window !== 'undefined') {
                window.removeEventListener('resize', handleResize);
            }
        };
    }, [numberOfMonths]);
    return (React.createElement("div", { className: "tp-calendar" },
        React.createElement(Context.Provider, { value: {
                handleChange: handleChange,
                selectedDays: cloneselectedDays,
                disabledDays: disabledDays,
                displayMonths: displayMonths,
                setDisplayMonths: setDisplayMonths,
                numberOfSelectableDays: numberOfSelectableDays,
                disabled: disabled,
                disabledBeforToday: disabledBeforToday,
                setSelectedDays: setSelectedDays,
                numberOfMonths: numberOfMonth,
                jalali: jalali,
                source: source,
                setSource: setSource,
                DayComponent: dayComponent,
                TitleComponent: titleComponent,
            } },
            React.createElement(Header, null),
            displayMonths ? React.createElement(DisplayMonth, null) : React.createElement(Month, null))));
};

var fontSize = function (fs) { return fs / 14 + 'rem'; };
var theme = {
    primary: '#13c8b5',
    primaryHover: '#12baa9',
    secondary: '#757575',
    underlineColor: '#d0f4f0',
    disabledText: '#E0E0E0',
    dir: 'rtl',
    fs16: fontSize(16),
    fs14: fontSize(14),
    fs13: fontSize(13),
    fs12: fontSize(12),
    fs11: fontSize(11),
};

exports.DatePicker = DatePicker;
exports.RangePicker = DatePicker;
exports.theme = theme;
//# sourceMappingURL=index.js.map
